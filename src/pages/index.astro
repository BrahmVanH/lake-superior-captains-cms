---
export const prerender = false;
import { API_URL_DEV } from 'astro:env/server';

import Layout from '../layouts/Layout.astro';

import { graphQLFetch, fetchPropertyImgs, PropertyNames } from '@/lib/API/index';

import { GET_COTTAGE_IMGS, GET_HIDEAWAY_IMGS, GET_PROPERTIES as query } from '@/lib/API/queries';
import type { ImageObject, Property } from '@/lib/__generated__/types';
import PropertyCard, { type Props as CardProps } from '@/components/PropertyCard';
import PropertyCardConsole from '@/components/PropertyCardConsole';

console.log(API_URL_DEV);
const gqlRes = await graphQLFetch(query);

console.log('properties: ', gqlRes);

if (!gqlRes?.getProperties) {
	throw new Error('Error - properties data not present on fetch response');
}

const properties: Property[] = gqlRes.getProperties;

let propertiesCardData;
async function createCardProps(ps: Property[]): Promise<CardProps[]> {
	try {
		return Promise.all(
			ps.map(async (property: Property) => {
				const imgs: ImageObject[] = await fetchPropertyImgs(property.propertyName as PropertyNames);
				if (!imgs) {
					throw new Error('No imgs returned from fetch request');
				}
				return {
					gallery: imgs,
					info: property,
				};
			})
		);
	} catch (e) {
		console.error('Error creating Card Props', e);
		throw new Error(`Error creating Card Props: ${e}`);
	}
}

const cardProps = await createCardProps(properties);
console.log("cardProps: ", cardProps)
---

<Layout title={'Dashboard'}>
	<div class='flex flex-col justify-center items-center mt-8'>
		<PropertyCardConsole client:only propertyCardData={cardProps} />
	</div>
</Layout>
